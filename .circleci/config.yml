
version: 2
jobs:
  test_backend:
    docker:
      - image: circleci/golang:1.8
    working_directory: /go/src/github.com/verath/archipelago
    steps:
      - checkout
      - run: go build -v
      - run: go test -v -race -timeout 30s ./...

  publish_backend_docker:
    docker:
      - image: docker:stable
    steps:
      - checkout
      - setup_remote_docker
      - run: |
          TAG=1.0.0-$CIRCLE_SHA1
          docker build -f Dockerfile.backend -t $DOCKER_USER/archipelago-backend:$TAG .
          docker login -u $DOCKER_USER -p $DOCKER_PASS
          docker push $DOCKER_USER/archipelago-backend:$TAG

  build_frontend:
    docker:
      - image: circleci/node:6
    steps:
      - checkout
      - restore_cache:
          keys: 
            - v1-frontend-yarn-{{ checksum "web/yarn.lock" }}
      - run: cd web && yarn install
      - run: cd web && yarn run lint
      - run: cd web && yarn run build:prod -- --display-error-details --devtool source-map
      - save_cache:
          key: v1-frontend-yarn-{{ checksum "web/yarn.lock" }}
          paths:
            - ~/.cache/yarn
      - persist_to_workspace:
          root: .
          paths:
            - web/dist

  aws_deploy:
    docker:
      - image: circleci/buildpack-deps:jessie
    working_directory: ~/project
    steps:
      - attach_workspace:
          at: ~/project
      - run:
          name: Install awscli
          command: |
            sudo apt-get -y -q update
            sudo apt-get -y -q install python3-dev python3-pip
            sudo pip3 install --upgrade pip
            sudo pip3 install --upgrade awscli
      - deploy:
          name: Deploy frontend to S3
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              aws s3 sync web/dist s3://archipelago-frontend --delete
            else
              echo "Not master branch so not deploying"
            fi

workflows:
  version: 2
  build_frontend_backend:
    jobs:
      - test_backend
      - build_frontend
      - publish_backend_docker:
          requires:
            - test_backend
          filters:
            branches:
              only: master
      - aws_deploy:
          requires:
            - build_frontend
            - publish_backend_docker
          filters:
            branches:
              only: master
